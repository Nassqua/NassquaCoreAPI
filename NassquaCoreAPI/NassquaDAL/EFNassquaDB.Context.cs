//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NassquaDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EFNassquaDB : DbContext
    {
        public EFNassquaDB()
            : base("name=EFNassquaDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Experience> Experiences { get; set; }
        public DbSet<User> User { get; set; }
        public DbSet<Reservation> Reservation { get; set; }
        public DbSet<Schedule> Schedule { get; set; }
    
        public virtual ObjectResult<Experience> HZ_Experience_CRUD(string op, string expId, string expDesc)
        {
            var opParameter = op != null ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(string));
    
            var expIdParameter = expId != null ?
                new ObjectParameter("ExpId", expId) :
                new ObjectParameter("ExpId", typeof(string));
    
            var expDescParameter = expDesc != null ?
                new ObjectParameter("ExpDesc", expDesc) :
                new ObjectParameter("ExpDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Experience>("HZ_Experience_CRUD", opParameter, expIdParameter, expDescParameter);
        }
    
        public virtual ObjectResult<Experience> HZ_Experience_CRUD(string op, string expId, string expDesc, MergeOption mergeOption)
        {
            var opParameter = op != null ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(string));
    
            var expIdParameter = expId != null ?
                new ObjectParameter("ExpId", expId) :
                new ObjectParameter("ExpId", typeof(string));
    
            var expDescParameter = expDesc != null ?
                new ObjectParameter("ExpDesc", expDesc) :
                new ObjectParameter("ExpDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Experience>("HZ_Experience_CRUD", mergeOption, opParameter, expIdParameter, expDescParameter);
        }
    }
}
